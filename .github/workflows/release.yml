name: release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: release url to file
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: upload release url for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt
  build:
    strategy:
      matrix:
        build-os: [windows, linux, darwin]
        build-arch: [amd64, 386]
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: load release url
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: get release url
        id: get_release_url
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: build
        uses: actions/setup-go@v1
        with:
          go-version: "1.13"
      - name: build
        run: env GOOS=${{ matrix.build-os }} GOARCH=${{ matrix.build-arch}} go build -o challenge2019_${{ matrix.build-os }}_${{ matrix.build-arch}} .
      - name: upload release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_url.outputs.upload_url }}
          asset_path: ./challenge2019_${{ matrix.build-os }}_${{ matrix.build-arch}}
          asset_name: challenge2019_${{ matrix.build-os }}_${{ matrix.build-arch}}
          asset_content_type: application/octet-stream
