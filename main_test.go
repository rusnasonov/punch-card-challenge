package main

import (
	"strings"
	"testing"
	"bytes"
)

func TestPunchCardEncoding(t *testing.T){
	val := "123456"
	expected := [][]byte{
		[]byte("###*########"),
		[]byte("####*#######"),
		[]byte("#####*######"),
		[]byte("######*#####"),
		[]byte("#######*####"),
		[]byte("########*###"),
	}
	encoded, err := punchCardEncoder(val)
	if err != nil {
		t.Error(err)
	}
	for i, r := range encoded {
		if bytes.Compare(r, expected[i]) != 0 {
			t.Error("Exprected", expected[i], "Got", r)
		}
	}
}

func TestPunchCardDecoding(t *testing.T) {
	val := [][]byte{
		[]byte("#XX##X#####X##X########XX#XX####################################################"),
		[]byte("#########X#######X##X####X##X###################################################"),
		[]byte("X##X##X#X#X##X#X###X#X##########################################################"),
		[]byte("##############X#########X#######################################################"),
		[]byte("###X##X#########################################################################"),
		[]byte("X#######X##########X############################################################"),
		[]byte("##########X###############X#####################################################"),
		[]byte("###########X###############X####################################################"),
		[]byte("#############X##################################################################"),
		[]byte("################################################################################"),
		[]byte("#X#############X#####X#X########################################################"),
		[]byte("##X##X###X##########X####X##X###################################################"),
	}
	expected := "THIS IS TRUE WAY - TRY HARDER"
	decoded, err := punchCardDecoder(val)
	if err != nil {
		t.Error(err)
	}
	if expected != strings.Trim(decoded, " ") {
		t.Error("Expected", expected, "Got", decoded)
	}
}